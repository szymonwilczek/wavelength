<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 12.2.1 (0)
 -->
<!-- Title: BlobTransitionManager Pages: 1 -->
<!--zoomable 667 -->

<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">

<style type="text/css"><![CDATA[
.node, .edge {opacity: 0.7;}
.node.selected, .edge.selected {opacity: 1;}
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>

<defs>
  <circle id="rim" cx="0" cy="0" r="7"/>
  <circle id="rim2" cx="0" cy="0" r="3.5"/>
  <g id="zoomPlus">
    <use xlink:href="#rim" fill="#404040"><set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/></use>
    <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
  </g>
  <g id="zoomMin">
    <use xlink:href="#rim" fill="#404040"><set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/></use>
    <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
  </g>
  <g id="arrowUp" transform="translate(30 24)">
    <use xlink:href="#rim"/>
    <path pointer-events="none" fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
  </g>
  <g id="arrowRight" transform="rotate(90) translate(36 -43)">
    <use xlink:href="#rim"/>
    <path pointer-events="none" fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
  </g>
  <g id="arrowDown" transform="rotate(180) translate(-30 -48)">
    <use xlink:href="#rim"/>
    <path pointer-events="none" fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
  </g>
  <g id="arrowLeft" transform="rotate(270) translate(-36 17)">
    <use xlink:href="#rim"/>
    <path pointer-events="none" fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
  </g>
  <g id="resetDef">
    <use xlink:href="#rim2" fill="#404040"><set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/></use>
  </g>
</defs>
<script type="application/ecmascript">
var viewWidth = 203;
var viewHeight = 667;
var sectionId = 'dynsection-1';
</script>
<script type="application/ecmascript" xlink:href="svg.min.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>BlobTransitionManager</title>
<!-- Node1 -->
<g id="Node000001" class="node">
<title>Node1</title>
<g id="a_Node000001"><a xlink:title="Manages transitions and movement analysis for the Blob animation based on window events.">
<polygon fill="#999999" stroke="none" points="195,-575 0,-575 0,0 195,0 195,-575"/>
<text text-anchor="start" x="48" y="-561.5" font-family="Helvetica,sans-Serif" font-size="10.00">BlobTransitionManager</text>
<text text-anchor="start" x="5.5" y="-547" font-family="Helvetica,sans-Serif" font-size="10.00">&#45;</text>
<text text-anchor="start" x="14" y="-547" font-family="Helvetica,sans-Serif" font-size="10.00">int inactivity_counter_</text>
<text text-anchor="start" x="5.5" y="-532.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45;</text>
<text text-anchor="start" x="14" y="-532.5" font-family="Helvetica,sans-Serif" font-size="10.00">bool is_moving_</text>
<text text-anchor="start" x="5.5" y="-518" font-family="Helvetica,sans-Serif" font-size="10.00">&#45;</text>
<text text-anchor="start" x="14" y="-518" font-family="Helvetica,sans-Serif" font-size="10.00">bool is_resizing_</text>
<text text-anchor="start" x="5.5" y="-503.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45;</text>
<text text-anchor="start" x="14" y="-503.5" font-family="Helvetica,sans-Serif" font-size="10.00">qint64 last_movement</text>
<text text-anchor="start" x="14" y="-493" font-family="Helvetica,sans-Serif" font-size="10.00">_time_</text>
<text text-anchor="start" x="5.5" y="-478.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45;</text>
<text text-anchor="start" x="14" y="-478.5" font-family="Helvetica,sans-Serif" font-size="10.00">QVector2D m_smoothed</text>
<text text-anchor="start" x="14" y="-468" font-family="Helvetica,sans-Serif" font-size="10.00">_velocity_</text>
<text text-anchor="start" x="5.5" y="-453.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45;</text>
<text text-anchor="start" x="14" y="-453.5" font-family="Helvetica,sans-Serif" font-size="10.00">std::pmr::deque&lt; WindowMovement</text>
<text text-anchor="start" x="14" y="-443" font-family="Helvetica,sans-Serif" font-size="10.00">Sample &gt; movement_buffer_</text>
<text text-anchor="start" x="5.5" y="-428.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45;</text>
<text text-anchor="start" x="14" y="-428.5" font-family="Helvetica,sans-Serif" font-size="10.00">static constexpr int</text>
<text text-anchor="start" x="14" y="-418" font-family="Helvetica,sans-Serif" font-size="10.00"> kMaxMovementSamples</text>
<text text-anchor="start" x="4" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">void AddMovementSample</text>
<text text-anchor="start" x="14" y="-393" font-family="Helvetica,sans-Serif" font-size="10.00">(const QPointF &amp;position,</text>
<text text-anchor="start" x="14" y="-382.5" font-family="Helvetica,sans-Serif" font-size="10.00"> qint64 timestamp)</text>
<text text-anchor="start" x="4" y="-368" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-368" font-family="Helvetica,sans-Serif" font-size="10.00">BlobTransitionManager</text>
<text text-anchor="start" x="14" y="-357.5" font-family="Helvetica,sans-Serif" font-size="10.00">(QObject *parent=nullptr)</text>
<text text-anchor="start" x="4" y="-343" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-343" font-family="Helvetica,sans-Serif" font-size="10.00">void ClearAllMovementBuffers()</text>
<text text-anchor="start" x="4" y="-328.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-328.5" font-family="Helvetica,sans-Serif" font-size="10.00">void ClearMovementBuffer()</text>
<text text-anchor="start" x="4" y="-314" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-314" font-family="Helvetica,sans-Serif" font-size="10.00">int GetInactivityCounter</text>
<text text-anchor="start" x="14" y="-303.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="4" y="-289" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-289" font-family="Helvetica,sans-Serif" font-size="10.00">qint64 GetLastMovementTime</text>
<text text-anchor="start" x="14" y="-278.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="4" y="-264" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-264" font-family="Helvetica,sans-Serif" font-size="10.00">std::pmr::deque&lt; WindowMovement</text>
<text text-anchor="start" x="14" y="-253.5" font-family="Helvetica,sans-Serif" font-size="10.00">Sample &gt; GetMovementBuffer() const</text>
<text text-anchor="start" x="4" y="-239" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-239" font-family="Helvetica,sans-Serif" font-size="10.00">void IncrementInactivity</text>
<text text-anchor="start" x="14" y="-228.5" font-family="Helvetica,sans-Serif" font-size="10.00">Counter()</text>
<text text-anchor="start" x="4" y="-214" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-214" font-family="Helvetica,sans-Serif" font-size="10.00">bool IsMoving() const</text>
<text text-anchor="start" x="4" y="-199.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-199.5" font-family="Helvetica,sans-Serif" font-size="10.00">void ProcessMovementBuffer</text>
<text text-anchor="start" x="14" y="-189" font-family="Helvetica,sans-Serif" font-size="10.00">(std::vector&lt; QPointF &gt;</text>
<text text-anchor="start" x="14" y="-178.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;velocity, QPointF &amp;blob</text>
<text text-anchor="start" x="14" y="-168" font-family="Helvetica,sans-Serif" font-size="10.00">_center, std::vector&lt; QPointF</text>
<text text-anchor="start" x="14" y="-157.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; &amp;control_points, float blob</text>
<text text-anchor="start" x="14" y="-147" font-family="Helvetica,sans-Serif" font-size="10.00">_radius, const std::function&lt; void</text>
<text text-anchor="start" x="14" y="-136.5" font-family="Helvetica,sans-Serif" font-size="10.00">(std::vector&lt; QPointF &gt; &amp;, QPointF</text>
<text text-anchor="start" x="14" y="-126" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;, std::vector&lt; QPointF &gt; &amp;, float,</text>
<text text-anchor="start" x="14" y="-115.5" font-family="Helvetica,sans-Serif" font-size="10.00"> QVector2D)&gt; &amp;ApplyInertiaForce, const</text>
<text text-anchor="start" x="14" y="-105" font-family="Helvetica,sans-Serif" font-size="10.00"> std::function&lt; void(const QPointF &amp;)&gt;</text>
<text text-anchor="start" x="14" y="-94.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;SetLastWindowPos)</text>
<text text-anchor="start" x="4" y="-80" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-80" font-family="Helvetica,sans-Serif" font-size="10.00">void ResetInactivityCounter()</text>
<text text-anchor="start" x="4" y="-65.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-65.5" font-family="Helvetica,sans-Serif" font-size="10.00">void SetLastMovementTime</text>
<text text-anchor="start" x="14" y="-55" font-family="Helvetica,sans-Serif" font-size="10.00">(const qint64 time)</text>
<text text-anchor="start" x="4" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">void SetMoving(const</text>
<text text-anchor="start" x="14" y="-30" font-family="Helvetica,sans-Serif" font-size="10.00"> bool is_moving)</text>
<text text-anchor="start" x="4" y="-15.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-15.5" font-family="Helvetica,sans-Serif" font-size="10.00">void SetResizingState</text>
<text text-anchor="start" x="14" y="-5" font-family="Helvetica,sans-Serif" font-size="10.00">(const bool is_resizing)</text>
<polygon fill="#666666" stroke="#666666" points="0,-558.5 0,-558.5 195,-558.5 195,-558.5 0,-558.5"/>
<polygon fill="#666666" stroke="#666666" points="0,-415 0,-415 12,-415 12,-415 0,-415"/>
<polygon fill="#666666" stroke="#666666" points="12,-415 12,-415 195,-415 195,-415 12,-415"/>
<polygon fill="none" stroke="#666666" points="0,0 0,-575 195,-575 195,0 0,0"/>
</a>
</g>
</g>
<!-- Node2 -->
<g id="Node000002" class="node">
<title>Node2</title>
<g id="a_Node000002"><a xlink:title=" ">
<polygon fill="white" stroke="none" points="119.5,-658.5 75.5,-658.5 75.5,-611 119.5,-611 119.5,-658.5"/>
<text text-anchor="start" x="79.5" y="-645" font-family="Helvetica,sans-Serif" font-size="10.00">QObject</text>
<text text-anchor="start" x="96" y="-630.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<text text-anchor="start" x="96" y="-616" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polygon fill="#666666" stroke="#666666" points="75.5,-642 75.5,-642 119.5,-642 119.5,-642 75.5,-642"/>
<polygon fill="#666666" stroke="#666666" points="75.5,-627.5 75.5,-627.5 119.5,-627.5 119.5,-627.5 75.5,-627.5"/>
<polygon fill="none" stroke="#666666" points="75.5,-611 75.5,-658.5 119.5,-658.5 119.5,-611 75.5,-611"/>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1_Node000001_Node000002" class="edge">
<title>Node2&#45;&gt;Node1</title>
<g id="a_edge1_Node000001_Node000002"><a xlink:title=" ">
<path fill="none" stroke="#63b8ff" d="M97.5,-599.66C97.5,-592.3 97.5,-583.96 97.5,-574.85"/>
<polygon fill="none" stroke="#63b8ff" points="94,-599.58 97.5,-609.58 101,-599.58 94,-599.58"/>
</a>
</g>
</g>
</g>
</svg>

<g id="navigator" transform="translate(0 0)" fill="#404254">
  <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
  <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
  <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
  <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
   <use id="arrowup" xlink:href="#arrowUp" x="0" y="0" onmousedown="handlePan(0,-1)"/>
  <use id="arrowright" xlink:href="#arrowRight" x="0" y="0" onmousedown="handlePan(1,0)"/>
  <use id="arrowdown" xlink:href="#arrowDown" x="0" y="0" onmousedown="handlePan(0,1)"/>
  <use id="arrowleft" xlink:href="#arrowLeft" x="0" y="0" onmousedown="handlePan(-1,0)"/>
</g>
<svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
 <g id="arrow_out" transform="scale(0.3 0.3)">
  <a xlink:href="classBlobTransitionManager__coll__graph_org.svg" target="_base">
   <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
        fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
   <path id="arrow"
     d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
     style="fill:#404040;"/>
  </a>
 </g>
</svg>

<style type='text/css'>
<![CDATA[
[data-mouse-over-selected='false'] { opacity: 0.7; }
[data-mouse-over-selected='true']  { opacity: 1.0; }
]]>
</style>
<script type="application/ecmascript"><![CDATA[
document.addEventListener('DOMContentLoaded', (event) => {
  highlightEdges();
  highlightAdjacentNodes();
});
]]></script>
</svg>
